{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Dog Management API",
    "description": "API for managing users and their dogs."
  },
  "host": "localhost:3001",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer' followed by a space and then your token."
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "description": "Create a new user with a username and password.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "User already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "description": "Authenticate a user with a username and password.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "userId": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/users/{id}/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user profile",
        "description": "Retrieve profile information of a user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User profile",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "birthdate": {
                  "type": "string",
                  "format": "date"
                },
                "dogs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "breed": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user profile",
        "description": "Update profile information of a user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "birthdate": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/dogs": {
      "get": {
        "tags": [
          "Dog"
        ],
        "summary": "Get all dogs",
        "description": "Retrieve a list of all dogs.",
        "responses": {
          "200": {
            "description": "A list of dogs",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "breed": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Dog"
        ],
        "summary": "Create a new dog",
        "description": "Create a new dog for the authenticated user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "breed": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dog created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "breed": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/dogs/{id}": {
      "get": {
        "tags": [
          "Dog"
        ],
        "summary": "Get dog by ID",
        "description": "Retrieve a dog by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Dog details",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "breed": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Dog not found"
          }
        }
      },
      "put": {
        "tags": [
          "Dog"
        ],
        "summary": "Update dog by ID",
        "description": "Update a dog's information by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "breed": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dog updated"
          },
          "404": {
            "description": "Dog not found or access denied"
          }
        }
      },
      "delete": {
        "tags": [
          "Dog"
        ],
        "summary": "Delete dog by ID",
        "description": "Delete a dog by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Dog deleted"
          },
          "404": {
            "description": "Dog not found or access denied"
          }
        }
      }
    },
    "/users/{id}/dogs": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all dogs of a user",
        "description": "Retrieve a list of all dogs owned by a user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of dogs",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "breed": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add a dog to a user",
        "description": "Create a new dog and add it to a user's profile.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "breed": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dog added to user",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "breed": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "birthdate": {
          "type": "string",
          "format": "date"
        },
        "dogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dog"
          }
        }
      }
    },
    "Dog": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "breed": {
          "type": "string"
        },
        "ownerId": {
          "type": "integer"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication related endpoints"
    },
    {
      "name": "User",
      "description": "User related endpoints"
    },
    {
      "name": "Dog",
      "description": "Dog related endpoints"
    }
  ]
}
