{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Doggee API",
    "description": "API для управления пользователями и их собаками"
  },
  "host": "localhost:3001",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Регистрация пользователя",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string", "example": "johndoe" },
                "password": { "type": "string", "example": "password123" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "User created successfully" },
                "access_token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." },
                "refresh_token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." },
                "userId": { "type": "integer", "example": 1 }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "msg": { "type": "string", "example": "Username must be at least 5 chars long" },
                      "param": { "type": "string", "example": "username" },
                      "location": { "type": "string", "example": "body" }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User already exists",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "User already exists" }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Логин пользователя",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string", "example": "johndoe" },
                "password": { "type": "string", "example": "password123" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." },
                "refresh_token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." },
                "userId": { "type": "integer", "example": 1 }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "msg": { "type": "string", "example": "Username must be at least 5 chars long" },
                      "param": { "type": "string", "example": "username" },
                      "location": { "type": "string", "example": "body" }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Invalid credentials" }
              }
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": ["Auth"],
        "summary": "Обновление токена",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refresh_token": { "type": "string", "example": "some_refresh_token" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tokens refreshed successfully",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." },
                "refresh_token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Invalid refresh token" }
              }
            }
          }
        }
      }
    },
    "/users/{id}/profile": {
      "get": {
        "tags": ["Users"],
        "summary": "Получение профиля пользователя",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "integer", "example": 1 },
                "username": { "type": "string", "example": "johndoe" },
                "name": { "type": "string", "example": "John Doe" },
                "city": { "type": "string", "example": "New York" },
                "birthdate": { "type": "string", "example": "2000-01-01" },
                "dogs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Dog"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "User not found" }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      },
      "put": {
        "tags": ["Users"],
        "summary": "Обновление профиля пользователя",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "example": 1
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string", "example": "newusername" },
                "name": { "type": "string", "example": "John Doe" },
                "city": { "type": "string", "example": "New York" },
                "birthdate": { "type": "string", "example": "2000-01-01" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Profile updated successfully" }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "User not found" }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      }
    },
    "/users/{id}/dogs": {
      "get": {
        "tags": ["Dogs"],
        "summary": "Получение списка собак пользователя",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "List of user's dogs retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Dog"
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "User not found" }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      },
      "post": {
        "tags": ["Dogs"],
        "summary": "Создание собаки для пользователя",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "example": 1
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Rex" },
                "weight": { "type": "number", "example": 12.5 },
                "breed": { "type": "string", "example": "Labrador Retriever" }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Dog created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Dog created successfully" },
                "dog": {
                  "$ref": "#/definitions/Dog"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "msg": { "type": "string", "example": "Name is required" },
                      "param": { "type": "string", "example": "name" },
                      "location": { "type": "string", "example": "body" }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "User not found" }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      }
    },
    "/users/{userId}/dogs/{dogId}": {
      "put": {
        "tags": ["Dogs"],
        "summary": "Обновление данных о собаке пользователя",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "example": 1
          },
          {
            "name": "dogId",
            "in": "path",
            "required": true,
            "type": "integer",
            "example": 1
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "example": "Rex" },
                "weight": { "type": "number", "example": 12.5 }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dog updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Dog updated successfully" },
                "dog": {
                  "$ref": "#/definitions/Dog"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "msg": { "type": "string", "example": "Weight must be a positive number" },
                      "param": { "type": "string", "example": "weight" },
                      "location": { "type": "string", "example": "body" }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User or dog not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "User or dog not found" }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Access denied" }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      },
      "delete": {
        "tags": ["Dogs"],
        "summary": "Удаление собаки пользователя",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "example": 1
          },
          {
            "name": "dogId",
            "in": "path",
            "required": true,
            "type": "integer",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Dog deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Dog deleted successfully" }
              }
            }
          },
          "404": {
            "description": "User or dog not found",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "User or dog not found" }
              }
            }
          },
          "403": {
            "description": "Access denied",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Access denied" }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      }
    },
    "/breeds": {
      "get": {
        "tags": ["Breeds"],
        "summary": "Получить список пород собак",
        "description": "Возвращает список возможных пород собак",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Список пород",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": ["Labrador Retriever", "German Shepherd", "Golden Retriever", "French Bulldog"]
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Error retrieving breeds" },
                "error": { "type": "string", "example": "Internal Server Error" }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "example": 1 },
        "username": { "type": "string", "example": "johndoe" },
        "name": { "type": "string", "example": "John Doe" },
        "city": { "type": "string", "example": "New York" },
        "birthdate": { "type": "string", "example": "2000-01-01" },
        "dogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Dog"
          }
        }
      }
    },
    "Dog": {
      "type": "object",
      "properties": {
        "id": { "type": "integer", "example": 1 },
        "name": { "type": "string", "example": "Rex" },
        "weight": { "type": "number", "example": 12.5 },
        "breed": { "type": "string", "example": "Labrador Retriever" },
        "ownerId": { "type": "integer", "example": 1 }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Введите токен в формате 'Bearer <token>'"
    }
  }
}
